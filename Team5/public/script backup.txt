// script.js

// Function to close the modal
function closeModal() {
  // Close the modal using Bootstrap's modal method
  var modal = new bootstrap.Modal(document.getElementById('addCandidateModal'));
  modal.hide();
}

// Handle form submission to add a candidate
document.getElementById('addCandidateForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const candidateFirstName = document.getElementById('candidateFirstName').value;
  const candidateLastName = document.getElementById('candidateLastName').value;
  const candidatePhone = document.getElementById('candidatePhone').value;
  const candidateEmail = document.getElementById('candidateEmail').value;
  const candidateSeekingPosition = document.getElementById('candidateSeekingPosition').value;
  const candidateExperience = document.getElementById('candidateExperience').value;

  try {
    // Send request to server to add candidate
    const response = await fetch('/main/addCandidate', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ 
        firstName: candidateFirstName,
        lastName: candidateLastName,
        phone: candidatePhone,
        email: candidateEmail,
        seekingPosition: candidateSeekingPosition,
        experience: candidateExperience
      })
    });

    // Process response
    const data = await response.json();
    if (data.success) {
      
      // Candidate added successfully, update UI if needed
      console.log('Candidate added:', data.candidate);
      displayCandidateList(); // Refresh the candidate list
      closeModal(); // Close the modal
    } else {
      console.error('Failed to add candidate:', data.message);
      // Handle error (e.g., display error message)
    }
  } catch (error) {
    console.error('Error:', error);
    // Handle network errors
  }
});

// Function to display candidate list
async function displayCandidateList() {
  try {
    // Fetch candidate list from server
    const response = await fetch('/main/getCandidates');
    const data = await response.json();

    // Update UI with candidate list
    const candidateList = document.getElementById('candidateList');
    candidateList.innerHTML = ''; // Clear previous list

    data.forEach(candidate => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${candidate.firstName}</td>
        <td>${candidate.lastName}</td>
        <td>${candidate.phone}</td>
        <td>${candidate.email}</td>
        <td>${candidate.seekingPosition}</td>
        <td>${candidate.experience}</td>
      `;
      candidateList.appendChild(row);
    });
  } catch (error) {
    console.error('Error:', error);
    // Handle errors
  }
}

// Call the function to display candidate list
displayCandidateList();

// Function to filter candidates based on search input
function filterCandidates(searchInput) {
  const candidateList = document.getElementById('candidateList');
  const candidates = candidateList.getElementsByTagName('tr');

  for (let candidate of candidates) {
    const fullName = candidate.getElementsByTagName('td')[0].innerText.toLowerCase() + ' ' + candidate.getElementsByTagName('td')[1].innerText.toLowerCase();
    if (fullName.includes(searchInput.toLowerCase())) {
      candidate.style.display = '';
    } else {
      candidate.style.display = 'none';
    }
  }
}

// Event listener for search input
document.getElementById('searchInput').addEventListener('input', function(event) {
  filterCandidates(event.target.value);
});