<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <style>
    /* Custom CSS styles */
    .container {
      margin-top: 50px;
    }

    .candidate-list {
      margin-top: 20px;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Welcome to your Dashboard, <span id="username"></span></h1>
    <button class="btn btn-primary" id="addCandidateBtn" data-bs-toggle="modal" data-bs-target="#addCandidateModal">Add
      Candidate</button>
    <div class="candidate-list">
      <h2>Candidate List</h2>
      <ul id="candidateList" class="list-group">
        <!-- Candidates will be displayed here -->
      </ul>
    </div>
  </div>

  <!-- Modal to add candidate -->
  <div class="modal fade" id="addCandidateModal" tabindex="-1" aria-labelledby="addCandidateModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addCandidateModalLabel">Add Candidate</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <!-- Form to add candidate will be here -->
          <form id="addCandidateForm">
            <div class="mb-3">
              <label for="candidateFirstName" class="form-label">First Name</label>
              <input type="text" class="form-control" id="candidateFirstName" required>
            </div>
            <div class="mb-3">
              <label for="candidateLastName" class="form-label">Last Name</label>
              <input type="text" class="form-control" id="candidateLastName" required>
            </div>
            <div class="mb-3">
              <label for="candidatePhone" class="form-label">Phone</label>
              <input type="text" class="form-control" id="candidatePhone" required>
            </div>
            <div class="mb-3">
              <label for="candidateEmail" class="form-label">Email</label>
              <input type="text" class="form-control" id="candidateEmail" required>
            </div>

            <div class="mb-3">
              <label for="candidateSeekingPosition" class="form-label">Which position are you seeking</label>
              <input type="text" class="form-control" id="candidateSeekingPosition" required>
            </div>

            <div class="mb-3">
              <label for="candidateExperience" class="form-label">Year of Experience</label>
              <input type="text" class="form-control" id="candidateExperience" required>
            </div>

            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <!-- JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Retrieve username from localStorage
    const username = localStorage.getItem('username');
    if (username) {
      document.getElementById('username').textContent = username;
    }

    // Handle form submission to add a candidate
    document.getElementById('addCandidateForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const candidateFirstName = document.getElementById('candidateFirstName').value;
      const candidateLastName = document.getElementById('candidateLastName').value;
      const candidatePhone = document.getElementById('candidatePhone').value;
      const candidateEmail = document.getElementById('candidateEmail').value;
      const candidateSeekingPosition = document.getElementById('candidateSeekingPosition').value;
      const candidateExperience = document.getElementById('candidateExperience').value;

      try {
        // Send request to server to add candidate
        const response = await fetch('/main/addCandidate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            firstName: candidateFirstName,
            lastName: candidateLastName,
            phone: candidatePhone,
            email: candidateEmail,
            seekingPosition: candidateSeekingPosition,
            experience: candidateExperience
          })
        });

        // Process response
        const data = await response.json();
        if (data.success) {
          // Candidate added successfully, update UI if needed
          console.log('Candidate added:', data.candidate);
          displayCandidateList(); // Refresh the candidate list
        } else {
          console.error('Failed to add candidate:', data.message);
          // Handle error (e.g., display error message)
        }
      } catch (error) {
        console.error('Error:', error);
        // Handle network errors
      }

      // Close the modal after form submission
      const modal = new bootstrap.Modal(document.getElementById('addCandidateModal'));
      modal.hide();
    });

    // Function to display candidate list
    async function displayCandidateList() {
      try {
        // Fetch candidate list from server
        const response = await fetch('/main/getCandidates');
        const data = await response.json();
        
      // Update UI with candidate list
          const candidateList = document.getElementById('candidateList');
          candidateList.innerHTML = ''; // Clear previous list

      data.forEach(candidate => {
        const listItem = document.createElement('li');
          listItem.classList.add('list-group-item');
          listItem.textContent = `${candidate.firstName} ${candidate.lastName}-${candidate.phone}- ${candidate.email} - seeking: ${candidate.seekingPosition}- Year of experience: ${candidate.experience}`;
        candidateList.appendChild(listItem);
      });
    } catch (error) {
      console.error('Error:', error);
      // Handle errors
    }
  }

  // Call the function to display candidate list
  displayCandidateList();
  </script>

</body>

</html>