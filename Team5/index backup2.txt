import express from 'express';
import bodyParser from 'body-parser';
import { MongoClient } from 'mongodb';
import path, { dirname } from 'path';
import { fileURLToPath } from 'url';
import { readFile, writeFile } from 'fs/promises';

const __dirname = dirname(fileURLToPath(import.meta.url));
const app = express();
const PORT = process.env.PORT || 3000;

// Serve static files (CSS, images, etc.)
app.use(express.static(path.join(__dirname ,"public")));

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json()); // Parse JSON bodies

// MongoDB URI
const uri = 'mongodb://localhost:27017';
const client = new MongoClient(uri);

// Connect to MongoDB
client.connect();

// Route for serving the index.html page
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// Route for handling form submission
app.post('/login', async (req, res) => {
  const { email, password } = req.body;

  try {
    const db = client.db('codeCrafter');
    const usersCollection = db.collection('users');

    const user = await usersCollection.findOne({ email, password });
    
    if (user) {
      // Authentication successful, redirect to main.html
      res.redirect('/main.html');
    } else {
      // Authentication failed, render login page with error message
      res.redirect('/?authFailed=true');
    }
  } catch (error) {
    console.error('Error:', error);
    res.status(500).send('Internal Server Error');
  }
});

// Route for adding a candidate
app.post('/main/addCandidate', async (req, res) => {
    // Extract candidate data from request body
    const { firstName, lastName, phone, email, seekingPosition, experience } = req.body;
  
    try {
      // Add candidate to MongoDB
      const db = client.db('codeCrafter');
      const candidatesCollection = db.collection('candidates');
      const result = await candidatesCollection.insertOne({ 
        firstName, 
        lastName, 
        phone, 
        email, 
        seekingPosition, 
        experience 
      });
  
      // Send success response
      res.json({ success: true, message: 'Candidate added successfully', candidate: result.ops[0] });
    } catch (error) {
      console.error('Error:', error);
      res.status(500).json({ success: false, message: 'Failed to add candidate' });
    }
  });

// Route for retrieving candidates
app.get('/main/getCandidates', async (req, res) => {
    try {
        // Retrieve candidates from MongoDB (You need to implement this)
        const db = client.db('codeCrafter');
        const candidatesCollection = db.collection('candidates');
        const candidates = await candidatesCollection.find().toArray();

        // Send success response with candidate data
        res.json(candidates);
    } catch (error) {
        console.error('Error:', error);
        res.status(500).json({ success: false, message: 'Failed to retrieve candidates' });
    }
});

// Start server
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});